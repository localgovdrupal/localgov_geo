<?php

/**
 * @file
 * Provides a geo entity type.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function localgov_geo_theme() {
  return [
    'localgov_geo' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for geo templates.
 *
 * Default template: localgov-geo.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the geo information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_localgov_geo(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function localgov_geo_theme_suggestions_localgov_geo(array $variables) {
  $suggestions = [];

  $geo = $variables['elements']['#localgov_geo'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'localgov_geo__' . $sanitized_view_mode;
  $suggestions[] = 'localgov_geo__' . $geo->bundle();
  $suggestions[] = 'localgov_geo__' . $geo->bundle() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_localgov_roles_default().
 */
function localgov_geo_localgov_roles_default() {
  return [
    // @codingStandardsIgnoreLine
    \Drupal\localgov_roles\RolesHelper::EDITOR_ROLE => [
      'access geo overview',
      'create geo',
      'delete geo',
      'edit geo',
    ],
    // @codingStandardsIgnoreLine
    \Drupal\localgov_roles\RolesHelper::AUTHOR_ROLE => [
      'create geo',
    ],
  ];
}
