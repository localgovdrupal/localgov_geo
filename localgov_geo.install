<?php

/**
 * @file
 * Install, update and uninstall functions for the localgov_geo module.
 */

use Drupal\user\RoleInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\localgov_geo\Entity\LocalgovGeo;

/**
 * Implements hook_install().
 */
function localgov_geo_install() {
  // So node.module says don't do this. Media then just does it.
  // Working assumption here is that exposing geo information is the intention.
  // Otherwise we could push this into the localgov profile. However, it not
  // obviously would break things for people installing Directories without
  // the profile. Like even search api indexes what anonymous can see so you
  // don't get the location is the search results.
  if (\Drupal::moduleHandler()->moduleExists('user')) {
    user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, ['view geo']);
    user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['view geo']);
  }
}

/**
 * Add label and configure defaults for label field.
 */
function localgov_geo_update_8001() {
  // Add label field to the geo entity.
  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Label'))
    ->setDescription(t('Short human identification or description.'))
    ->setRequired(TRUE)
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setSetting('max_length', 1020)
    ->setDisplayOptions('view', [
      'label' => 'hidden',
      'type' => 'string',
      'weight' => -5,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => -5,
      'region' => 'hidden',
    ])
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('label', 'localgov_geo', 'localgov_geo', $field_storage_definition);

  // Add field for default label token replacement on bundle.
  $config_factory = \Drupal::configFactory();
  foreach ($config_factory->listAll('localgov_geo.localgov_geo_type.') as $bundle_config_name) {
    $token = ($bundle_config_name == 'localgov_geo.localgov_geo_type.address') ? '[localgov_geo:postal_address]' : '[localgov_geo:id]';
    $geo_bundle = $config_factory->getEditable($bundle_config_name);
    $geo_bundle->set('label_token', $token);
    $geo_bundle->save();
  }

}

/**
 * Update all existing localgov_geo enties for new label field.
 */
function localgov_geo_update_8002(&$sandbox) {
  if (!isset($sandbox['total'])) {
    $sandbox['total'] = \Drupal::entityQuery('localgov_geo')->count()->execute();
    $sandbox['current'] = 0;
  }

  $ids = \Drupal::entityQuery('localgov_geo')
    ->range($sandbox['current'], 50)
    ->execute();
  if (empty($ids)) {
    $sandbox['#finished'] = 1;
    return;
  }

  foreach ($ids as $id) {
    $geo = LocalgovGeo::load($id);
    $geo->save();
    $sandbox['current']++;
  }

  \Drupal::messenger()
    ->addMessage($sandbox['current'] . ' geo entities processed.');

  if ($sandbox['current'] >= $sandbox['total']) {
    $sandbox['#finished'] = 1;
  }
  else {
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);
  }
}

/**
 * Set localgov_geo_address submodule as enabled.
 */
function localgov_geo_update_8003() {
  $extension_config = \Drupal::configFactory()->getEditable('core.extension');
  $extension_config
    ->set("module.localgov_geo_address", 0)
    ->set('module', module_config_sort($extension_config->get('module')))
    ->save(TRUE);
  drupal_set_installed_schema_version('localgov_geo_address', 0);
}
